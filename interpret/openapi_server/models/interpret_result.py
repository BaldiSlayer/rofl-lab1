from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class InterpretResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer=None):  # noqa: E501
        """InterpretResult - a model defined in OpenAPI

        :param answer: The answer of this InterpretResult.  # noqa: E501
        :type answer: str
        """
        self.openapi_types = {
            'answer': str
        }

        self.attribute_map = {
            'answer': 'answer'
        }

        self._answer = answer

    @classmethod
    def from_dict(cls, dikt) -> 'InterpretResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InterpretResult of this InterpretResult.  # noqa: E501
        :rtype: InterpretResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer(self) -> str:
        """Gets the answer of this InterpretResult.


        :return: The answer of this InterpretResult.
        :rtype: str
        """
        return self._answer

    @answer.setter
    def answer(self, answer: str):
        """Sets the answer of this InterpretResult.


        :param answer: The answer of this InterpretResult.
        :type answer: str
        """
        if answer is None:
            raise ValueError("Invalid value for `answer`, must not be `None`")  # noqa: E501

        self._answer = answer
