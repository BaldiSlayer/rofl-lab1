name: Build images

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'chart/values.yaml'
      - 'data/output.md'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder-llm
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder-backend
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder-interpret
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder-formalize
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push llm
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.builder-llm.outputs.name }}
          push: true
          tags: stewkk/tfl-lab1-llm:${{ github.sha }} , stewkk/tfl-lab1-llm:latest
          file: ./dockerfiles/llm.dockerfile
          cache-from: type=registry,ref=stewkk/tfl-lab1-llm:latest
          cache-to: type=inline
      -
        name: Determine version
        shell: bash
        run: |
          PACKAGE="github.com/BaldiSlayer/rofl-lab1"
          COMMIT_HASH="$(git rev-parse --short HEAD)"
          BUILD_TIMESTAMP=$(TZ=Europe/Moscow date --rfc-3339 s)

          LDFLAGS=(
            "-X '${PACKAGE}/internal/version.CommitHash=${COMMIT_HASH}'"
            "-X '${PACKAGE}/internal/version.BuildTimestamp=${BUILD_TIMESTAMP}'"
          )

          echo "LDFLAGS=${LDFLAGS[*]}" >> $GITHUB_ENV
      -
        name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.builder-backend.outputs.name }}
          push: true
          tags: stewkk/tfl-lab1-backend:${{ github.sha }} , stewkk/tfl-lab1-backend:latest
          file: ./dockerfiles/backend.dockerfile
          build-args: LDFLAGS=${{ env.LDFLAGS }}
          cache-from: type=registry,ref=stewkk/tfl-lab1-backend:latest
          cache-to: type=inline
      -
        name: Build and push interpret
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.builder-interpret.outputs.name }}
          push: true
          tags: stewkk/tfl-lab1-interpret:${{ github.sha }} , stewkk/tfl-lab1-interpret:latest
          file: ./dockerfiles/interpret.dockerfile
          cache-from: type=registry,ref=stewkk/tfl-lab1-interpret:latest
          cache-to: type=inline
      -
        name: Build and push formalize
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.builder-formalize.outputs.name }}
          push: true
          tags: stewkk/tfl-lab1-formalize:${{ github.sha }} , stewkk/tfl-lab1-formalize:latest
          file: ./dockerfiles/formalize.dockerfile
          cache-from: type=registry,ref=stewkk/tfl-lab1-formalize:latest
          cache-to: type=inline

  update:
    name: Update Helm Manifests
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: 'write'
      packages: 'write'
      actions: 'read'

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.VERSION_BUMPER_APPID }}
          private-key: ${{ secrets.VERSION_BUMPER_SECRET }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Update Image Tag Values
        run: |
          chart_dir="chart"
          new_image_tag=${{ github.sha }}
          
          # Update the values.yaml file with the new image tag
          sed -i "s/^  tag: .*/  tag: $new_image_tag/" "$chart_dir/values.yaml"

      - name: Commit the changes made
        run: |
          git pull
          git commit -am "updating image tag"
          git push