from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class FormalizeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trs=None):  # noqa: E501
        """FormalizeRequest - a model defined in OpenAPI

        :param trs: The trs of this FormalizeRequest.  # noqa: E501
        :type trs: str
        """
        self.openapi_types = {
            'trs': str
        }

        self.attribute_map = {
            'trs': 'trs'
        }

        self._trs = trs

    @classmethod
    def from_dict(cls, dikt) -> 'FormalizeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FormalizeRequest of this FormalizeRequest.  # noqa: E501
        :rtype: FormalizeRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trs(self) -> str:
        """Gets the trs of this FormalizeRequest.


        :return: The trs of this FormalizeRequest.
        :rtype: str
        """
        return self._trs

    @trs.setter
    def trs(self, trs: str):
        """Sets the trs of this FormalizeRequest.


        :param trs: The trs of this FormalizeRequest.
        :type trs: str
        """
        if trs is None:
            raise ValueError("Invalid value for `trs`, must not be `None`")  # noqa: E501

        self._trs = trs
