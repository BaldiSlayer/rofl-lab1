[
  {
    "question": "Что такое ТФЯ?",
    "answer": "теория формальных языков"
  },
  {
    "question": "Что такое ДКА?",
    "answer": "детерминированный конечный автомат"
  },
  {
    "question": "Рекурсивные языки.",
    "answer": "Язык L называется рекурсивным, если L = L(M) для некоторой машины Тьюринга M, удовлетворяющей следующим условиям. 1. Если w принадлежит L, то M попадает в допускающее состояние (и, следовательно, останавливается). 2. Если w не принадлежит L, то M в конце концов останавливается, хотя и не попадает в допускающее состояние. МТ этого типа соответствует интуитивному понятию “алгоритма” — правильно определенной последовательности шагов, которая всегда заканчивается и приводит к некоторому ответу. Если мы рассматриваем язык L как “проблему”, то проблема L называется разрешимой, если она является рекурсивным языком. В противном случае проблема называется неразрешимой."
  },
  {
    "question": "Рекурсивно-перечислимые языки. Примеры языков, которые являются рекурсивно-перечислимыми, но не рекурсивными.",
    "answer": "Язык L является рекурсивно-перечислимым (РП-языком), если L = L(M) для некоторой машины Тьюринга M"
  },
  {
    "question": "Что такое язык диагонализации L_d",
    "answer": "Язык диагонализации Ld — это множество всех цепочек wi, не принадлежащих L(Mi)."
  },
  {
    "question": "Является ли язык Ld рекурсивно-перечислимым",
    "answer": "Язык Ld не является рекурсивно-перечислимым, т.е. не существует машины Тьюринга, которая допускала бы Ld.Доказательство. Допустим, что Ld = L(M) для некоторой МТ M. Так как Ld — язык надалфавитом {0, 1}, M должна содержаться в построенной нами последовательности машинТьюринга, поскольку эта последовательность содержит все МТ с входным алфавитом {0, 1}. Следовательно, в ней есть, по крайней мере, один код машины M, скажем, i, т.е. M = Mi. Выясним теперь, принадлежит ли wi языку Ld.Если wi принадлежит Ld, то Mi допускает wi Но тогда (по определению Ld) wi не принадлежит Ld, так как Ld содержит лишь такие wj для которых Mj не допускает wj Точно так же, если wi не принадлежит Ld, то Mi не допускает wi. Но тогда (по определению Ld) wi принадлежит Ld. Поскольку wi не может одновременно и принадлежать, и не принадлежать Ld, приходим к противоречию с нашим предположением о том, что M существует. Таким образом, Ld не является рекурсивно-перечислимым языком."
  },
  {
    "question": "Почему языки 'рекурсивные'?",
    "answer": "Современные программисты знакомы с понятием рекурсивной функции. Остается непонятным, что общего между рекурсивными функциями и машинами Тьюринга, которые всегда останавливаются. Еще хуже, что нерекурсивными, или неразрешимыми, называются языки, которые не распознаются никаким алгоритмом, хотя под “нерекурсивными” мы привыкли понимать вычисления настолько простые, что они не требуют обращений к рекурсивным функциям. Термин “рекурсивный” как синоним слова “разрешимый” возник в период развития математики, предшествовавший появлению компьютеров. В качестве понятия вычисления обычно использовались формализмы, основанные на рекурсии (но не итерации или цикле). В этих системах понятий (не рассматриваемых здесь) было нечто от вычислений в таких языках функционального программирования, как LISP или ML. В этом смысле выражение “проблема рекурсивна” означало, что она “проста настолько, что можно записать рекурсивную функцию, которая всегда приводит к ее решению за конечное число шагов”. И в наши дни применительно к машинам Тьюринга этот термин имеет в точности тот же смысл. Термин “рекурсивно-перечислимый” — из того же семейства понятий. С помощью некоторой функции элементы языка можно выписать в некотором порядке, т.е. “перечислить” их. Языки, элементы которых можно перечислить в некотором порядке, — это именно те языки, которые допускаются некоторой МТ (возможно, работающей бесконечно на недопустимых входах)."
  },
  {
    "question": "Почему все рекурсивные языки являются рекурсивно-перечислимыми, но не все рекурсивно-перечислимые языки являются рекурсивными.",
    "answer": "Чтобы доказать что язык является РП, но не рекурсивным, часто используется дополнение этого языка. Покажем, что рекурсивные языки замкнуты относительно дополнения. Поэтому, если язык L является РП, а его дополнение L` — нет, то L не может быть рекурсивным. Если бы L был рекурсивным, то L` также был бы рекурсивным, а следовательно, и РП. Докажем это важное свойство замкнутости рекурсивных языков. Теорема: Если L — рекурсивный язык, то язык L` также рекурсивен. Доказательство. Пусть L = L(M) для некоторой всегда останавливающейся МТ M. Построим МТ M , у которой L` = L( M ), т.е. M ведет себя так же, как и M; изменения касаются лишь допускающих состояний. 1. Допускающие состояния M становятся недопускающими состояниями M , не имеющими переходов, т.е. в этих состояниях M останавливается, не допуская. 2. M имеет новое допускающее состояние r, из которого нет переходов. 3. Для каждой комбинации из недопускающего состояния и ленточного символа M, в которой M не имеет перехода (т.е. останавливается, не допуская), добавляется переход в допускающее состояние r.  Поскольку M всегда останавливается, то всегда останавливается и M . Кроме того, M допускает множество именно тех цепочек, которые не допускаются M, т.е. L` ."
  },
  {
    "question": "Почему универсальный язык L_u является РП, но не рекурсивным.",
    "answer": "Язык Lu является РП. Допустим, что Lu рекурсивен. Тогда по теореме 9.3 L` u (дополнение Lu) — также рекурсивный язык. Но если существует МТ M, допускающая L` u, то, используя описанный ниже метод, можно построить МТ, допускающую Ld. Поскольку нам известно, что Ld не является РП, приходим к противоречию с предположением, что язык Lu является рекурсивным. Предположим, что L(M) = L` u. можно преобразовать МТ M в МТ M′, которая допускает Ld с помощью следующих действий1. M′ преобразует входную цепочку w в w111w. В качестве упражнения читатель может написать программу для выполнения этого шага на одной ленте. Однако легче это сделать, используя для копии w вторую ленту, и затем преобразовать двухленточную МТ в одноленточную. 2. M′ имитирует M на новом входе. Если w есть wi в нашем перечислении, то M′ определяет, допускает ли Mi вход wi. Поскольку M допускает L` u, то она допускает тогда и только тогда, когда Mi не допускает wi, т.е. когда wi принадлежит Ld. Таким образом, M′ допускает w тогда и только тогда, когда w принадлежит Ld. Поскольку по теореме 9.2 машины M′ не существует, приходим к выводу, что язык Lu не является рекурсивным."
  },
  {
    "question": "Является ли язык Lne РП/рекурсивным?",
    "answer": "Lne – непустой язык состоит из кодов всех машин Тьюринга, которые допускают хотя бы одну цепочку.   Он рекурсивно-перечислим, но не рекурсивным"
  },
  {
    "question": "Является ли язык Le РП/рекурсивным?",
    "answer": " Le – пустой язык состоит из кодов всех МТ, языки которых пусты. Он не рекурсивно-перечислим."
  },
  {
    "question": "Теорема Райса",
    "answer": "Всякое нетривиальное свойство РП-языков неразрешимо."
  },
  {
    "question": "Существует ли вход, при обработке которого МТ совершает более пяти переходов?",
    "answer": "Алгоритм решения становится очевидным,если заметить, что, когда МТ делает пять переходов, она обозревает не более девяти клеток вокруг начальной позиции головки. Поэтому можно проимитировать пять переходов МТ на любом из конечного числа входов, длина которых не более девяти. Если все эти имитации не достигают останова, то делается вывод, что на любом входе данная МТ совершает более пяти переходов"
  },
  {
    "question": "Что такое проблема соответствий Поста.",
    "answer": "Экземпляр проблемы соответствий Поста (ПСП) состоит из двух списков равной длины в некотором алфавите Σ. Как правило, мы будем называть их списками A и B, и писать A = w1, w2, …, wk и B = x1, x2, …, xk при некотором целом k. Для каждого i пара (wi, xi) называется парой соответствующих цепочек. Мы говорим, что экземпляр ПСП имеет решение, если существует последовательность из одного или нескольких целых чисел i1, i2, …, im, которая, если считать эти числа индексами цепочек и выбрать соответствующие цепочки из списков A и B, дает одну и ту же цепочку, т.е. wi1 wi2 …wim = xi1 xi2 …xim. В таком случае последовательность i1, i2, …, im называется решающей последовательностью, или просто решением, данного экземпляра ПСП"
  },
  {
    "question": "Что такое модифицированная проблема соответствий Поста. ",
    "answer": "Модифицированной проблемой соответствий Поста, или МПСП. В модифицированной ПСП на решение накладывается дополнительное требование, чтобы первой парой в решении была пара первых элементов списков A и B. Более формально, экземпляр МПСП состоит из двух списков A = w1, w2, …, wk и B = x1, x2, …, xk, и решением является последовательность из 0 или нескольких целых чисел i1, i2, …, im, при которой w1wi1wi2…wim = x1xi1xi2…xim. Отметим, что цепочки обязательно начинаются парой (w1, x1), хотя индекс 1 даже не указан в качестве начального элемента решения. Кроме того, в отличие от ПСП, решение которой содержит хотя бы один элемент, решением МПСП может быть и пустая последовательность (когда w1 = x1). Однако такие экземпляры не представляют никакого интереса и далее не рассматриваются."
  },
  {
    "question": "Разрешима ли ПСП/ проблема соответствий поста",
    "answer": "Проблема соответствий Поста неразрешима."
  },
  {
    "question": "Разрешим ли вопрос о неоднозначности КС-грамматики",
    "answer": "Вопрос о неоднозначности КС-грамматики неразрешим"
  },
  {
    "question": "Пусть G1 и G2 — КС-грамматики, а R — регулярное выражение. Тогда какие проблемы неразрешимы?",
    "answer": "Пусть G1 и G2 — КС-грамматики, а R — регулярное выражение. Тогда неразрешимы следующие проблемы: а) 'L(G1) I L(G2) = ∅ ?' б) 'L(G1) = L(G2) ?' в) 'L(G1) = L(R) ?'' г) верно ли, что L(G1) = T* для некоторого алфавита T ? д) 'L(G1) ⊆ L(G2) ?' е) 'L(R) ⊆ L(G1) ?'"
  },
  {
      "question": "Что такое переход машины Тьюринга?",
      "answer": "Переход машины Тьюринга — это функция, зависящая от состояния конечного управления и обозреваемого символа. За один переход машина Тьюринга должна выполнить следующие действия: изменить состояние, записать ленточный символ в обозреваемую клетку, сдвинуть головку влево или вправо."
  },
  {
      "question": "Какие языки допускаются при помощи машины Тьюринга?",
      "answer": "Языки, допустимые с помощью машины Тьюринга, называются рекурсивно перечислимыми, или РП-языками."
  },
  {
      "question": "Опишите прием «память в состоянии» машины Тьюринга.",
      "answer": "Память в состоянии - конечное управление можно использовать не только для представления позиции в «Программе» машины Тьюринга, но и для хранения конечного объема данных."
  },
  {
      "question": "Опишите прием «Подпрограммы» машины Тьюринга.",
      "answer": "Подпрограмма машины Тьюринга представляет собой множество состояний, выполняющее некоторый полезный процесс. Это множество включает в себя стартовое состояние и еще одно состояние, которое не имеет переходов и служит состоянием «возврата» для передачи управления какому-либо множеству состояний, вызвавшему данную подпрограмму. «Вызов» подпрограммы возникает везде, где есть переход в ее начальное состояние."
  },
  {
      "question": "Можно ли запомнить позицию ленточной головки в позиции управления у машины Тьюринга?",
      "answer": "Хотя позиции конечны в каждый момент времени, всё множество позиций может быть и бесконечным. Если состояние должно представлять любую позицию головки, то в состоянии должен быть компонент данных, имеющий любое целое в качестве значения. Из-за этого компонента множество состояний должно быть бесконечным, даже если только конечное число состояний используется в любой конечный момент времени. Определение же машин Тьюринга требует, чтобы множество состояний было конечным. Таким образом, запомнить позицию ленточной головки в конечном управлении нельзя."
  },
  {
      "question": "Что такое «счетчиковая машина»?",
      "answer": "«Счетчиковые машины» — это класс машин, обладающие возможностью запоминать конечное число целых чисел («счетчиков») и совершать различные переходы в зависимости от того, какие из счетчиков равны 0 (если таковые вообще есть). Счетчиковая машина может только прибавить 1 к счетчику или вычесть 1 из него, но отличить значения двух различных ненулевых счетчиков она не способна."
  },
  {
      "question": "Какой язык допускается счетчиковой машиной?",
      "answer": "Каждый язык, допускаемый счетчиковой машиной, рекурсивно перечислим. Причина в том, что счетчиковые машины являются частным случаем магазинных, а магазинные — частным случаем многоленточных машин Тьюринга, которые по теореме допускают только рекурсивно перечислимые языки."
  },
  {
      "question": "Допускается ли любой рекурсивно перечислимый язык двухсчетчиковой машиной?",
      "answer": "Для имитации машины Тьюринга и, следовательно, для допускания любого рекурсивно перечислимого языка, достаточно двух счетчиков. Для обоснования этого утверждения вначале доказывается, что достаточно трех счетчиков, а затем три счетчика имитируются с помощью двух."
  },
  {
      "question": "Что такое универсальная машина Тьюринга?",
      "answer": "Универсальной машиной Тьюринга называют машину Тьюринга, которая может заменить собой любую машину Тьюринга. Получив на вход программу и входные данные, она вычисляет ответ, который вычислила бы по входным данным машина Тьюринга, чья программа была дана на вход."
  },
  {
      "question": "Какое время необходимо многоленточной машины Тьюринга для имитации переходов компьютера?",
      "answer": "Выполнение n шагов работы компьютера можно проимитировать на одноленточной машине Тьюринга с использованием не более O(n^3) шагов."
  },
  {
      "question": "Что можно сказать о мощностях разных машин Тьюринга?",
      "answer": "Все виды машин Тьюринга, независимо от различий в их конструкции или правилах работы, обладают одинаковой вычислительной мощностью, то есть способны вычислить одни и те же классы функций. Это свойство называется тезисом Чёрча-Тьюринга. Оно гласит, что любая вычислимая функция может быть вычислена машиной Тьюринга. Различия между видами машин Тьюринга (например, между детерминированными и недетерминированными машинами, машинами с одним или несколькими лентами) могут повлиять на эффективность вычислений (время или пространство), но не на саму вычислительную мощность."
  },
  {
      "question": "Если проблема P1 неразрешима и ее можно свести к проблеме P2, то является ли проблема P2 неразрешимой?",
      "answer": "Если P1 можно свести к P2 и если P1 неразрешима, то и P2 неразрешима."
  },
  {
      "question": "Что такое рандомизированная машина Тьюринга?",
      "answer": "Рандомизированная машина Тьюринга — это вариант многоклеточной машины Тьюринга. Первая лента, как обычно для многоленточных машин, содержит вход. Вторая лента также начинается непустыми клетками. В принципе, вся она содержит символы 0 и 1, выбранные с вероятностью 1/2. Вторая лента называется случайной лентой. Третья и последующие, если используются, вначале пусты и при необходимости выступают как рабочие."
  },
]
