// Package parser provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package parser

// Interpretation defines model for Interpretation.
type Interpretation struct {
	Args      []NonEmptyString `json:"args"`
	Constants []int            `json:"constants"`
	Monomials []Monomial       `json:"monomials"`
	Name      NonEmptyString   `json:"name"`
}

// Letter Variable or constructor
type Letter struct {
	IsVariable bool           `json:"isVariable"`
	Name       NonEmptyString `json:"name"`
}

// Monomial defines model for Monomial.
type Monomial struct {
	Coefficient *int           `json:"coefficient,omitempty"`
	Power       *int           `json:"power,omitempty"`
	Variable    NonEmptyString `json:"variable"`
}

// NonEmptyString defines model for NonEmptyString.
type NonEmptyString = string

// ParseError defines model for ParseError.
type ParseError struct {
	Line    int             `json:"line"`
	Message *NonEmptyString `json:"message,omitempty"`
	Range   struct {
		From int `json:"from"`
		To   int `json:"to"`
	} `json:"range"`
	Summary NonEmptyString `json:"summary"`
}

// Rule defines model for Rule.
type Rule struct {
	Lhs Subexpression `json:"lhs"`
	Rhs Subexpression `json:"rhs"`
}

// Subexpression defines model for Subexpression.
type Subexpression struct {
	Args *[]Subexpression `json:"args,omitempty"`

	// Letter Variable or constructor
	Letter Letter `json:"letter"`
}

// Trs defines model for Trs.
type Trs struct {
	Interpretations []Interpretation `json:"interpretations"`
	Rules           []Rule           `json:"rules"`
	Variables       []NonEmptyString `json:"variables"`
}
